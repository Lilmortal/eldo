@use '@eldo/ui-tokens' as tokens;

$spaces: (
  0: 0,
  auto: auto,
  xs: tokens.$space-xs,
  md: tokens.$space-md,
  lg: tokens.$space-lg,
  xl: tokens.$space-xl,
);

@function getVar($var) {
  // handle negative values
  @if (type-of($var) == 'string' and str-slice($var, 1, 1) == '-') {
    $positiveVar: map-get($spaces, str-slice($var, 2));
    @if (type-of($positiveVar) == 'number') {
      @return $positiveVar * -1;
    } @else {
      @return null;
    }
  } @else {
    @return map-get($spaces, $var);
  }
}

@mixin validateVar($vars...) {
  @each $var in $vars {
    @if ($var != null and type-of(getVar($var)) == null) {
      @error 'Invalid variable name #{$var}';
    }
  }
}

@mixin spreadVar($property, $top, $right, $bottom, $left) {
  #{$property}: getVar($top) getVar($right) getVar($bottom) getVar($left);
}

@mixin padding($top, $right: null, $bottom: null, $left: null) {
  @include validateVar($top, $right, $bottom, $left);
  @include spreadVar(padding, $top, $right, $bottom, $left);
}

@mixin margin($top, $right: null, $bottom: null, $left: null) {
  @include validateVar($top, $right, $bottom, $left);
  @include spreadVar(margin, $top, $right, $bottom, $left);
}

@mixin border($top, $right: null, $bottom: null, $left: null) {
  @include validateVar($top, $right, $bottom, $left);
  @include spreadVar(border, $top, $right, $bottom, $left);
}
