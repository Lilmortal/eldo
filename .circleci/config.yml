version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1.0.15
jobs:
  build:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
  lint:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: yarn lint
  test:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: yarn test
  publish-verdaccio:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - add_ssh_keys:
          fingerprints:
            - "e7:f1:01:8d:dd:35:a4:f0:3f:31:95:99:29:39:8e:8d"
      - run: yarn login:npm
      - run: git config --global user.email "jacktan165@gmail.com"
      - run: git config --global user.name "Jack Tan"
      - run: yarn deploy
  publish-aws:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: yarn build
      - aws-s3/sync:
          arguments: |
            --acl public-read \
            --cache-control "max-age=60"
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          from: packages/@eldo/app/dist
          overwrite: true
          to: "s3://eldo-ui"
workflows:
  version: 2
  verify:
    jobs:
      - build
      - lint:
          requires:
            - build
      - test:
          requires:
            - build
      - publish-verdaccio:
          requires:
            - lint
            - test
      - publish-aws:
          requires:
            - publish-verdaccio
